/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
//  ==== VSI ====
/**
\defgroup arm_vsi_py VSI Python interface
\ingroup arm_vsi
\brief      VSI python interface.
\details

The Python interface described in this section gets executed upon access to corresponding VSI peripheral registers and events explained in the \ref arm_vsi_api.

Each peripheral instance has a separate dedicated Python script file with the names **arm_vsi0.py**, **arm_vsi1.py**, ..., **arm_vsi7.py**.

The path to the python files implementing used interfaces shall be provided via the model configuration parameter `v_path`, that depending on the model is part of the `mps2_board`, `mps3_board` or `mps4_board` component. Section \ref Execution gives an example.


\defgroup arm_vsi_pyenv Python environment setup
\ingroup arm_vsi_py
\details

Arm FVPs require an installation of <b>Python 3.9</b> for running the Python virtual interfaces. Additional Python packages can be added using \em pip.

# Python requirements
The following packages are required on Linux systems (Ubuntu 20.04 and later):
- \em libatomic1
- \em python3.9
- \em python3-pip

Run the following command to install required packages on Ubuntu:
\code{.sh}
sudo apt install libatomic1 python3.9 python3-pip
\endcode

# Known issues
- Some Python packages can't be imported directly in the Python virtual interfaces, because they are incompatible with Python sub-interpreters (e.g. \em numpy). Possible workaround for this issue is to split the Python module into client and server scripts.


# Setup for FVPs older than 11.26

If you are using a Windows machine you can use an embedded Python installation in FVPs root directory, otherwise a system installation is required.

## Install additional packages in embedded Python
By default the embedded Python installation on Windows does not support installation of new packages using pip. To enable installing new packages follow the steps described below.
- Download [get-pip.py](https://bootstrap.pypa.io/get-pip.py) to the FVPs root directory.
- Uncomment the following line in the \b python39._pth file.
  \code {.sh}
  import site
  \endcode
- Open command prompt in the FVPs root directory and run the following command.
  \code {.sh}
  .\python.exe get-pip.py
  \endcode
- Install new packages using:
  \code {.sh}
  .\python.exe -m pip install <package>
  \endcode
  The packages will be installed in <code>Lib\\site-packages</code> subfolder.

## Known issues
- Fast Models (Version 11.22.39) available through vcpkg include a stripped-down version of libpython3.9 library on Linux systems. This can cause the Fast Model to close with an error (<em>VSI:Video:ImportError: No module named '_posixsubprocess'</em>) when running applications with VSI.  
  Current workaround:
    - Rename or remove included \em libpython3.9.so.1.0 file, located in the vcpkg installation folder  
      (e.g. ~/.vcpkg/artifacts/fd3d78d7/models.arm.avh.fvp/11.22.39/bin/models).
    - Install libpython3.9 using the system package manager.

*/
