/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
//  ==== VSocket ====
/**

\defgroup arm_vsocket Virtual Socket Interface (VSocket)
\ingroup arm_cmvp
\brief IP network connectivity via host system
\details

The **Virtual Socket Interface (VSocket)** provides IP connectivity to the user application by connecting it to [BSD sockets](https://en.wikipedia.org/wiki/Berkeley_sockets) on the Host system. Figure below demonstrates the concept.

\image html ./images/vsocket_structure.png

The following files define the access to the VSocket peripheral.

File                                | Description
:-----------------------------------|:-----------------------------------
[./interface/include/arm_vsocket.h](https://github.com/ARM-software/AVH/blob/main/interface/include/arm_vsocket.h)       | \ref arm_vsocket_api "VSocket API" header file
[./interface/vsocket/iot_socket.c](https://github.com/ARM-software/AVH/blob/main/interface/vsocket/iot_socket.c)           | Implementation of [IoT Socket](https://github.com/MDK-Packs/IoT_Socket) variant for Arm Virtual Hardware

\defgroup arm_vsocket_api VSocket API
\ingroup arm_vsocket
\brief Virtual Socket (VSocket) API
\details

The VSocket peripheral is accessed using the \ref ARM_VSocket_Type structure that is mapped into the memory of a Cortex-M system, for example:

\code
// Memory mapping of VSocket peripheral
#define ARM_VSOCKET_BASE        (0x4FEE0000UL)                          /*!< VSocket Base Address */
#define ARM_VSOCKET             ((ARM_VSocket_Type *)ARM_VSOCKET_BASE)  /*!< VSocket struct */
\endcode

The \ref ARM_VSocket_Type structure is defined in *arm_vsocket.h* file as follows:

\code
/// Structure type to access the VSocket
typedef struct
{
  volatile uint32_t                   reserved;
  volatile vSocketCreateIO_t        * vSocketCreateIO;
  volatile vSocketBindIO_t          * vSocketBindIO;
  volatile vSocketListenIO_t        * vSocketListenIO;
  volatile vSocketAcceptIO_t        * vSocketAcceptIO;
  volatile vSocketConnectIO_t       * vSocketConnectIO;
  volatile vSocketRecvIO_t          * vSocketRecvIO;
  volatile vSocketRecvFromIO_t      * vSocketRecvFromIO;
  volatile vSocketSendIO_t          * vSocketSendIO;
  volatile vSocketSendToIO_t        * vSocketSendToIO;
  volatile vSocketGetSockNameIO_t   * vSocketGetSockNameIO;
  volatile vSocketGetPeerNameIO_t   * vSocketGetPeerNameIO;
  volatile vSocketGetOptIO_t        * vSocketGetOptIO;
  volatile vSocketSetOptIO_t        * vSocketSetOptIO;
  volatile vSocketCloseIO_t         * vSocketCloseIO;
  volatile vSocketGetHostByNameIO_t * vSocketGetHostByNameIO;
} ARM_VSocket_Type;
\endcode

@{

\def ARM_VSOCKET_BASE
\def ARM_VSOCKET

\struct ARM_VSocket_Type
\details
The **ARM_VSocket_Type** structure provides access to the VSocket peripheral registers

\struct vSocketCreateIO_t

\struct vSocketBindIO_t

\struct vSocketListenIO_t

\struct vSocketAcceptIO_t

\struct vSocketConnectIO_t


\struct vSocketRecvIO_t

\struct vSocketRecvFromIO_t

\struct vSocketSendIO_t

\struct vSocketSendToIO_t

\struct vSocketGetSockNameIO_t

\struct vSocketGetPeerNameIO_t

\struct vSocketGetOptIO_t

\struct vSocketSetOptIO_t

\struct vSocketCloseIO_t

\struct vSocketGetHostByNameIO_t

@}


*/