/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
//  ==== VSI ====
/**
\defgroup arm_vsi Virtual Streaming Interface (VSI)
\ingroup arm_cmvp
\brief Data streaming interface for Cortex-M applications
\details

The Virtual Streaming Interface (VSI) is a flexible peripheral that allows to implement a wide range of use cases. 
It can be used to simulate data streaming such as audio, video and various sensors frequently found in Machine-Learning applications.
Eight VSI instances are available and may be used in parallel for simultaneous multi-channel streaming inputs and outputs.


Examples demonstrate the \ref arm_vsi_audio "Audio" streaming as shown in the diagram below.

\image html ./images/Example-Structure.png "AVH CoreStone-300 for Linux and Windows"

The VSI implements general purpose peripheral registers, an interrupt peripheral, a timer peripheral, and a DMA peripheral. The following files define the access to the VSI peripherals.

File                             | Description
:--------------------------------|:-----------------------------------
./interface/include/arm_vsi.h    | \ref arm_vsi_api "VSI API" header file
./interface/python/arm_vsi0.py   | \ref arm_vsi_py "VSI Python interface" script template for instance 0
  :                              |   :
./interface/python/arm_vsi7.py   | \ref arm_vsi_py "VSI Python interface" script template for instance 7

A read or write access to a VSI peripheral via its \ref arm_vsi_api "API" triggers execution of a corresponding function in the Python script that implements the \ref arm_vsi_py "VSI Python interface" instance. The concept is shown on the figure below.

\image html "using_vsi_uml.png" "Using VSI peripheral"

*/

