name: VHT CLI
on:
  workflow_dispatch:
  push:
    branches: [main, refactor_vhtcli]
    paths:
      - 'infrastructure/python_resources/**'
  pull_request:
    branches: [main, refactor_vhtcli]
    paths:
      - 'infrastructure/python_resources/**'
jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install setup dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools twine wheel
      - name: Build distribution
        working-directory: infrastructure/python_resources/
        run: |
          python setup.py sdist bdist_wheel
          twine check dist/*
      - name: Upload distribution
        uses: actions/upload-artifact@v2
        with:
          path: ./infrastructure/python_resources/dist/*

  lint:
    name: Run PyLint checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dev dependencies
        working-directory: ./infrastructure/python_resources/
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Run pylint
        working-directory: ./infrastructure/python_resources/
        run: |
          echo "::add-matcher::.github/pylint.json"
          pylint --exit-zero --rcfile=pylintrc . tests

  tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dev dependencies
        working-directory: infrastructure/python_resources/
        run: |
          python -m pip install --upgrade pip
          pip install . coverage
      - name: Run tests with coverage
        working-directory: infrastructure/python_resources/
        run: |
          coverage run --branch -m unittest discover -v
          coverage xml --include="./vht/**"
        env:
          AWS_DEFAULT_REGION: eu-west-1
      - name: Upload distribution
        uses: actions/upload-artifact@v2
        with:
          path: ./infrastructure/python_resources/coverage.xml
